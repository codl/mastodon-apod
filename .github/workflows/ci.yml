name: CI

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-suffix: lint
    - name: Ruff check
      run: |
        uvx ruff check
    - name: Ruff format check
      run: |
        uvx ruff format --check

  test:
    strategy: 
      matrix:
        python-version: ["3.13", "3.12", "3.11", "3.10"]


    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-suffix: ${{ matrix.python-version }}
    - name: Set up python ${{ matrix.python-version }}
      run: |
        uv venv --python=${{ matrix.python-version }}
    - name: Install dependencies and package
      run: |
        uv sync --group test --frozen

    - name: Test with pytest
      run: |
        uv run --frozen python -m coverage run --parallel -m pytest

    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ matrix.python-version }}
        path: .coverage.*
        include-hidden-files: true
        if-no-files-found: ignore

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-suffix: coverage
    - uses: actions/download-artifact@v4
      with:
        pattern: coverage-data-*
        merge-multiple: true
    - run: |
        uv tool install coverage[toml]
        coverage combine
        coverage html --skip-covered --skip-empty
        coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
    - uses: actions/upload-artifact@v4
      with:
        name: html-report
        path: htmlcov

